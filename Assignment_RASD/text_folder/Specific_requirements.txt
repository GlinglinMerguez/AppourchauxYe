3.1 External Interface Requirements

3.1.1 User Interfaces
The platform should provide intuitive and accessible user interfaces tailored to the three main user groups : Students, Companies and Universities

• Student Interface:
    • Allows students to create accounts, upload CVs, search for offers by keywords and browse internship offers
    • Displays personalized suggestions to improve CVs and provides recommandations for matching internships
    • Offers a dashboard to track applications, manage interviews and communicate with Companies
    • Includes a complaints section for reporting issues

Image to put

•  Company Interface:
    • Enables companies to create  and publish detailed internship offers
    • Offers tools for creating assessment tests and managing candidate evaluations, interviews and recruitement processes
    • Displays suggestions to improve internship descriptions and recommendations for suitable candidates
    • Includes a complaints section for reporting issues
Image to put

•  University Interface:
    • Provides tools to monitor ongoing internships and address complaints from both students and companies
    • Displays internship statuses, including student progress and company compliance
Image to put


3.1.2 Hardware Interfaces
Our platform is a web app, as a consequence, it does not require any specific hardware
 interface except for computer and any other device with web browser.

3.1.3 Software Interfaces
 The system will integrate with:
 • Email services: For sending notifications, such as interview schedules and application updates
 • Third-party APIs (University Internal Online Sercive): For university background checks
 • External database systems : 
    • Relational database (e.g. cloud-hosted MySQL) to store user information, intership offers and feedback
    • NoSQL database (e.g. MongoDB Atlas) for storing unstructured data, such as CSV files or applications logs


3.1.4 Communication Interfaces
The system will use the following communication protocols:
1. HTTPS
    • For secure communication between the platform and its users
    • HTTPS ensures data security by encrypting sensitive information, such as login credentials and feedback submissions
    • This guarantees data privacy and integrity during communication
2. RESTful APIs
    • For interaction between frontend (user interface) and backend services (server logic)
    • Enables strctured data exchange and facilitates integration with third-party services like email systems or university APIs
    • This ensures scalability and flexibility for future enhancements
3. WebSocket
    • For real-time communication between the platform and its users, such as real-time updates on application statuses, interviews schedules, feedback and notifications

3.2 Functional Requirements

Sign up and log in 
[R1] The system allows users (students, companies and universities) to register by providing their personal information (full name, organization etc), a valid email address and a password
[R2] The system allows registered users to log in and access the platform's features based on their roles

Internship Offers Management
[R3] The system allows companies to create, modify and delete internship offers
[R4] The system allows companies to manage the status of internship offers (e.g., open, closed, completed)
[R5] The system allows students to browse and filter internship offers based on criteria like location, field, required skills and degree level
[R6] The system notifies students abut new internship offers matching their profile and preference

CV and Application Management
[R7] The system allows students to upload CV on the platform
[R8] The system allows students to update their CVs and keep their profiles up to date
[R9] The system allows students to apply to internship offers directly from the platform by attaching their CVs and adding optional documents (e.g. cover letters)
[R10] The system allows companies to view, evalute and shortlist applications received for their internship offers

Recruitement Process Management
[R11] The system allows companies to initiate recruitment process that may include tests, interviews or both
[R12] The system allows companies to manage recruitment stages, including scheduling interviews, assigning tests and evaluating results
[R13] The system provides tools for companies to evaluate, score and rank candidates based on test results, interview feedback and overall suitability
[R14] The system notifies students of updates related to their recruitment status (e.g., rejected, hired, shortlisted)

Feedback and Suggestions 
[R15] The system allows students to provide feedback on their application and recruitment experiences
[R16] The system allows companies to provide feedback on candidates they evaluated and recruitment experiences
[R17] The system collects feedback from students and companies, analyzes it and generates actionable suggestions for both parties
[R18] The system sends personalized suggestions to students to improve their CVs, profiles, cover letters or applications
[R19] The system sends personalized suggestions to companies to improve their internship offers or recruitment strategies

Matching and Recommendations
[R20] The system uses a matching algorithm to analyze student CVs, internship offers and user preferences to generate recommendations
[R21] The system sends internship recommendations to students based on their skills, preferences and qualifications
[R22] The system sends candidate recommendations to companies based on the requirements of their internship offers

Complaints and Monitoring
[R23] The system allows students and companies to submit complaints about any issues related to the internship or recruitment process
[R24] The system allows universities to monitor and resolve complaints submitted by students or companies
[R25] The system notifies universities of unresolved issues or complaints requiring attention

Notifications and Real-time Updates
[R26] The system notifies students of application deadlines, interview schedules, test results and application status updates in real time
[R27] The system notifies companies of updates on candidate applications and recruitment stages

3.2.1
TO DO : Use cases diagram

3.2.2 Use Cases
[UC1] User registration 
• Name: User Registration
• Actors: Student, Company, University
• Entry Condition: The user has accessed the registration page of the platform
• Event Flow:
- The user clicks the “Register” button
- The system displays a registration form
- The user fills in the required fields (e.g., full name, email, password)
- The user submits the form
- The system validates the data and creates an account
- The system displays the login view
• Exit Condition: The user account is successfully registered
• Exception: If the email already exists, the system notifies the user and suggests logging in instead

[UC2] User Login
• Name: User login
• Actors: Student, Company, University
• Entry Condition: The user has accessed the registration page of the platform
• Event Flow:
- The user enters their email and password
- The user clicks the “Login” button
- The system verifies the credentials
- The user is redirected to their dashboard
• Exit Condition: The user is successfully logged in
• Exception: If credentials are incorrect, the system displays an error message

[UC3] Create Internship Offer
• Name: Internship offer creation
• Actors: Company
• Entry Condition: The company is logged in and has accessed the "Create Offer" section
• Event Flow:
- The company clicks “Add New Offer”
- The system displays a form to fill in offer details (e.g., title, description, required skills)
- The company completes the form and submits it
- The system validates the input and creates the offer
- The offer is displayed to students
• Exit Condition: The offer is successfully published
• Exception: If required fields are missing, the system prompts the company to complete the form

[UC4] Modify Internship offer
• Name: Internship offer modification
• Actors: Company
• Entry Condition: The company is logged in and has accessed an existing internship offer they created
• Event Flow:
- The company selects an internship offer to modify
- The system displays the existing details of the offer
- The company updates the fields (e.g., title, description, required skills, duration)
- The company submits the form
- The system validates the input and saves the updates
- The modified offer is displayed to students
• Exit Condition: The internship offer is successfully updated and published with the new details
• Exception: If required fields are missing, the system prompts the company to complete the updates

[UC5] Delete Internship offer
• Name: Delete internship offer
• Actors: Company
• Entry Condition: The company is logged in and has accessed an existing internship offer they created
• Event Flow:
- The company selects an internship offer to delete
- The system prompts for confirmation of the deletion
- The company confirms the deletion
- The system deletes the offer from the platform and notifies any students who had applied to it
• Exit Condition: The internship offer is successfully removed from the platform
• Exception: If the deletion fails due to system errors, the platform notifies the company and retries

[UC6] Browse and Filter Internship Offers
• Name: Browse and Filter Internship Offers
• Actors: Student
• Entry Condition: The student is logged in and has accessed the internship offers section
• Event Flow:
- The system displays a list of internship offers available on the platform
- The student uses filters (e.g., location, required skills, degree level) or keyword searching to refine the list
- The system updates the displayed offers based on the applied filters
- The student selects an offer to view its details
- The system displays the selected offer's full description
• Exit Condition: The student has found one or more relevant internship offers
• Exception: If no offers match the student's filters, the system notifies the student and suggests removing some filters

[UC7] Upload/Update CV
• Name: Upload/Uodate CV
• Actors: Student
• Entry Condition: The student is logged in and has accessed their profile section
• Event Flow:
- The student clicks the “Upload CV” button
- The system prompts the student to select a file from their device
- The student uploads the file
- The system validates the file format and size
- The system saves the CV to the student's profile
• Exit Condition: The CV is successfully uploaded and visible on the student's profile
• Exception: If the file format is unsupported or the file exceeds size limits, the system rejects the upload and notifies the student

[UC8] Apply for Internship Offer
• Name: Apply for Internship Offer
• Actors: Student
• Entry Condition: The student is logged in, has uploaded a CV, and is viewing an internship offer
• Event Flow:
- The student selects an internship offer to apply for
- The system displays a prompt to attach a CV or optional documents (e.g., cover letters)
- The student attaches the required documents and submits the application
- The system validates the documents and saves the application
- The system notifies the company about the new application
- The system sends a mail of confirmation of succesful application to student's email
• Exit Condition: The application is successfully submitted to the company
• Exception: If no CV is attached or the file format is invalid, the system notifies the student to correct the issue

[UC8] Apply for Internship Offer
• Name: Apply for Internship Offer
• Actors: Student
• Entry Condition: The student is logged in, has uploaded a CV, and is viewing an internship offer
• Event Flow:
- The student selects an internship offer to apply for
- The system displays a prompt to attach a CV or optional documents (e.g., cover letters)
- The student attaches the required documents and submits the application
- The system validates the documents and saves the application
- The system notifies the company about the new application
- The system sends a mail of confirmation of succesful application to student's email
• Exit Condition: The application is successfully submitted to the company
• Exception: If no CV is attached or the file format is invalid, the system notifies the student to correct the issue









